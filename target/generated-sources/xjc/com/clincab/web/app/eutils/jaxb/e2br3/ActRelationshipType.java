//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.12.20 at 02:30:39 PM IST 
//


package com.clincab.web.app.eutils.jaxb.e2br3;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for ActRelationshipType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="ActRelationshipType"&gt;
 *   &lt;restriction base="{urn:hl7-org:v3}cs"&gt;
 *     &lt;enumeration value="COMP"/&gt;
 *     &lt;enumeration value="OUTC"/&gt;
 *     &lt;enumeration value="PERT"/&gt;
 *     &lt;enumeration value="SEQL"/&gt;
 *     &lt;enumeration value="CONCURRENT"/&gt;
 *     &lt;enumeration value="DURING"/&gt;
 *     &lt;enumeration value="OVERLAP"/&gt;
 *     &lt;enumeration value="CIND"/&gt;
 *     &lt;enumeration value="PRCN"/&gt;
 *     &lt;enumeration value="RSON"/&gt;
 *     &lt;enumeration value="TRIG"/&gt;
 *     &lt;enumeration value="CHRG"/&gt;
 *     &lt;enumeration value="COST"/&gt;
 *     &lt;enumeration value="CREDIT"/&gt;
 *     &lt;enumeration value="DEBIT"/&gt;
 *     &lt;enumeration value="EAE"/&gt;
 *     &lt;enumeration value="EAS"/&gt;
 *     &lt;enumeration value="EBS"/&gt;
 *     &lt;enumeration value="ECW"/&gt;
 *     &lt;enumeration value="SAE"/&gt;
 *     &lt;enumeration value="SAS"/&gt;
 *     &lt;enumeration value="SBS"/&gt;
 *     &lt;enumeration value="SCW"/&gt;
 *     &lt;enumeration value="OBJC"/&gt;
 *     &lt;enumeration value="OBJF"/&gt;
 *     &lt;enumeration value="ARR"/&gt;
 *     &lt;enumeration value="CTRLV"/&gt;
 *     &lt;enumeration value="DEP"/&gt;
 *     &lt;enumeration value="EDU"/&gt;
 *     &lt;enumeration value="OCCR"/&gt;
 *     &lt;enumeration value="OREF"/&gt;
 *     &lt;enumeration value="SCH"/&gt;
 *     &lt;enumeration value="RCVY"/&gt;
 *     &lt;enumeration value="GOAL"/&gt;
 *     &lt;enumeration value="RISK"/&gt;
 *     &lt;enumeration value="AUTH"/&gt;
 *     &lt;enumeration value="CAUS"/&gt;
 *     &lt;enumeration value="COVBY"/&gt;
 *     &lt;enumeration value="DRIV"/&gt;
 *     &lt;enumeration value="ELNK"/&gt;
 *     &lt;enumeration value="EVID"/&gt;
 *     &lt;enumeration value="EXACBY"/&gt;
 *     &lt;enumeration value="EXPL"/&gt;
 *     &lt;enumeration value="ITEMSLOC"/&gt;
 *     &lt;enumeration value="LIMIT"/&gt;
 *     &lt;enumeration value="MFST"/&gt;
 *     &lt;enumeration value="NAME"/&gt;
 *     &lt;enumeration value="PREV"/&gt;
 *     &lt;enumeration value="REFR"/&gt;
 *     &lt;enumeration value="REFV"/&gt;
 *     &lt;enumeration value="RELVBY"/&gt;
 *     &lt;enumeration value="SPRT"/&gt;
 *     &lt;enumeration value="SUBJ"/&gt;
 *     &lt;enumeration value="SUMM"/&gt;
 *     &lt;enumeration value="USE"/&gt;
 *     &lt;enumeration value="BLOCK"/&gt;
 *     &lt;enumeration value="CURE"/&gt;
 *     &lt;enumeration value="CURE.ADJ"/&gt;
 *     &lt;enumeration value="DIAG"/&gt;
 *     &lt;enumeration value="MITGT"/&gt;
 *     &lt;enumeration value="MTGT.ADJ"/&gt;
 *     &lt;enumeration value="SYMP"/&gt;
 *     &lt;enumeration value="SDU"/&gt;
 *     &lt;enumeration value="APND"/&gt;
 *     &lt;enumeration value="BSLN"/&gt;
 *     &lt;enumeration value="COMPLY"/&gt;
 *     &lt;enumeration value="DOC"/&gt;
 *     &lt;enumeration value="FLFS"/&gt;
 *     &lt;enumeration value="GEN"/&gt;
 *     &lt;enumeration value="GEVL"/&gt;
 *     &lt;enumeration value="INST"/&gt;
 *     &lt;enumeration value="MOD"/&gt;
 *     &lt;enumeration value="MTCH"/&gt;
 *     &lt;enumeration value="OPTN"/&gt;
 *     &lt;enumeration value="RCHAL"/&gt;
 *     &lt;enumeration value="REV"/&gt;
 *     &lt;enumeration value="RPLC"/&gt;
 *     &lt;enumeration value="SUCC"/&gt;
 *     &lt;enumeration value="UPDT"/&gt;
 *     &lt;enumeration value="XCRPT"/&gt;
 *     &lt;enumeration value="XFRM"/&gt;
 *     &lt;enumeration value="SPRTBND"/&gt;
 *     &lt;enumeration value="VRXCRPT"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "ActRelationshipType")
@XmlEnum
public enum ActRelationshipType {

    COMP("COMP"),
    OUTC("OUTC"),
    PERT("PERT"),
    SEQL("SEQL"),
    CONCURRENT("CONCURRENT"),
    DURING("DURING"),
    OVERLAP("OVERLAP"),
    CIND("CIND"),
    PRCN("PRCN"),
    RSON("RSON"),
    TRIG("TRIG"),
    CHRG("CHRG"),
    COST("COST"),
    CREDIT("CREDIT"),
    DEBIT("DEBIT"),
    EAE("EAE"),
    EAS("EAS"),
    EBS("EBS"),
    ECW("ECW"),
    SAE("SAE"),
    SAS("SAS"),
    SBS("SBS"),
    SCW("SCW"),
    OBJC("OBJC"),
    OBJF("OBJF"),
    ARR("ARR"),
    CTRLV("CTRLV"),
    DEP("DEP"),
    EDU("EDU"),
    OCCR("OCCR"),
    OREF("OREF"),
    SCH("SCH"),
    RCVY("RCVY"),
    GOAL("GOAL"),
    RISK("RISK"),
    AUTH("AUTH"),
    CAUS("CAUS"),
    COVBY("COVBY"),
    DRIV("DRIV"),
    ELNK("ELNK"),
    EVID("EVID"),
    EXACBY("EXACBY"),
    EXPL("EXPL"),
    ITEMSLOC("ITEMSLOC"),
    LIMIT("LIMIT"),
    MFST("MFST"),
    NAME("NAME"),
    PREV("PREV"),
    REFR("REFR"),
    REFV("REFV"),
    RELVBY("RELVBY"),
    SPRT("SPRT"),
    SUBJ("SUBJ"),
    SUMM("SUMM"),
    USE("USE"),
    BLOCK("BLOCK"),
    CURE("CURE"),
    @XmlEnumValue("CURE.ADJ")
    CURE_ADJ("CURE.ADJ"),
    DIAG("DIAG"),
    MITGT("MITGT"),
    @XmlEnumValue("MTGT.ADJ")
    MTGT_ADJ("MTGT.ADJ"),
    SYMP("SYMP"),
    SDU("SDU"),
    APND("APND"),
    BSLN("BSLN"),
    COMPLY("COMPLY"),
    DOC("DOC"),
    FLFS("FLFS"),
    GEN("GEN"),
    GEVL("GEVL"),
    INST("INST"),
    MOD("MOD"),
    MTCH("MTCH"),
    OPTN("OPTN"),
    RCHAL("RCHAL"),
    REV("REV"),
    RPLC("RPLC"),
    SUCC("SUCC"),
    UPDT("UPDT"),
    XCRPT("XCRPT"),
    XFRM("XFRM"),
    SPRTBND("SPRTBND"),
    VRXCRPT("VRXCRPT");
    private final String value;

    ActRelationshipType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static ActRelationshipType fromValue(String v) {
        for (ActRelationshipType c: ActRelationshipType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
